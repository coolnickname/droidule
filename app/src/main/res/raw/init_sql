CREATE TABLE IF NOT EXISTS organisations (
    id             INT,
    name           TEXT,

    PRIMARY KEY (id),
    UNIQUE KEY (id)
);

CREATE TABLE IF NOT EXISTS locations (
    id             INT,
    name           TEXT,
    organisation   INT,

    PRIMARY KEY (id),
    UNIQUE KEY (id),
    FOREIGN KEY (organisation) REFERENCES organisations
);

CREATE TABLE IF NOT EXISTS attendees (
    id             INT,
    name           TEXT,
    location       INT,
    type           INT,

    PRIMARY KEY (id),
    UNIQUE KEY (id),
    FOREIGN KEY (location) REFERENCES locations
);

CREATE TABLE IF NOT EXISTS events (
    id             INT,
    year           INT,
    week           INT,
    day            INT,
    description    TEXT,
    start          TEXT,
    end            TEXT,

    PRIMARY KEY (id),
    UNIQUE KEY (id)
);

CREATE TABLE IF NOT EXISTS attendee_events (
    attendee       INT,
    event          INT,

    FOREIGN KEY (attendee) REFERENCES attendees,
    FOREIGN KEY (event) REFERENCES events
);

CREATE TABLE IF NOT EXISTS weekschedule_age (
    attendee       INT,
    year           INT,
    week           INT,
    lastUpdate     INT,

    FOREIGN KEY (attendee) REFERENCES attendees
);

CREATE VIEW IF NOT EXISTS attendee_events_view AS
    SELECT attendee, event, year, week, day, description, start, end, name, location, type
    FROM attendee_events
        INNER JOIN events ON attendee_events.event = events.id
        INNER JOIN attendees ON attendee_events.attendee = attendees.id;

CREATE TRIGGER IF NOT EXISTS attendee_events_remove
INSTEAD OF DELETE ON attendee_events_view
BEGIN
    DELETE FROM attendee_events WHERE attendee = old.attendee AND event = old.event;
    DELETE FROM events WHERE id = old.event;
END;
